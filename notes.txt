single responsibility principle 
class based models 
implement all associations (ALL)
understand raw queries in sequelize 
-------------------------------------------------------------------------------------
next task -> 
implement assoiciations : oneToMany , manyToOne etc etc;

make a user profile 
-> name 
-> email 
-> addresses(many)
-> payment methods(many)
-> profile pic (one)(upload to cloud service)(s3)
-> qualifications(many)
-> section (A , B , C , D) -> {students:{} , name : ""}
etc etc using sequelize (ORM)

Implement CRUD FOR ALL ATTRUBUTES;

1user table,1sectionn table,1address table,1profile
-------------------------------------------------------------------------------------

-> next task 
pagination (why pagination);(pagination on backend);
sending file directly to cloud 
-------------------------------------------------------------------------------------

next task -> 26/06/2003 , Thursday : submission Friday
ACID properties , why  do we need this 
Real time examples of every property, both cases , failiure and solution
Normalization 
indexing 
examples of every property indexing and Normalizatio;


ecommerce website ; backend focussed -> admin mode and user mode 
make a layout-> then database 
products 
admin 
user 
cart 

query profling 
checking performance of query 


version control help -> git 
helps in collaboration 
any change in the codebase is called version / new version

presentation -> choosing column for index 
when NOT to use index 0